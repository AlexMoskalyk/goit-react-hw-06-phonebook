{"version":3,"sources":["Components/contactsList/ContactsList.module.css","Components/form/Form.module.css","Components/filter/Filter.module.css","Components/redux/contacts/contacts-types.js","Components/redux/contacts/contacts-actions.js","Components/contactsList/ContacsList.js","Components/filter/Filter.js","Components/form/Form.js","Components/contacts/Contacts.js","services/localStorage.js","App.js","Components/redux/contacts/contacts-reducer.js","Components/redux/store.js","index.js"],"names":["module","exports","ADD_NEW_CONTACT","GET_ALL_CONTACTS","DELETE_CONTACT","CHANGE_FILTER","changeFilter","createAction","deleteContact","getAllContacts","addNewContact","contact","payload","id","nanoid","contactName","contactNumber","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","mapDispatchToProps","connect","state","contacts","items","className","styles","ul","map","item","li","type","onClick","onChange","e","target","value","label","pattern","title","required","initialState","contatcs","useState","setContact","onHandleChange","name","prev","container","onSubmit","preventDefault","some","alert","formBtn","useEffect","newContacts","key","reformedState","localStorage","getItem","undefined","JSON","parse","error","console","log","message","load","stringify","setItem","save","App","createReducer","action","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4EACAA,EAAOC,QAAU,CAAC,GAAK,2B,mBCAvBD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,wBAAwB,UAAY,wBAAwB,QAAU,wB,mBCA9HD,EAAOC,QAAU,CAAC,MAAQ,wB,kICDpBC,EAAkB,yBAClBC,EAAmB,uBACnBC,EAAiB,yBACjBC,EAAgB,wB,OCUTC,EAAeC,YAAaF,GAC5BG,EAAgBD,YAAaH,GAC7BK,EAAiBF,YAAaJ,GAC9BO,EAAgBH,YAAaL,GAAiB,SAACS,GAC1D,MAAO,CACLC,QAAS,CACPC,GAAIC,cACJC,YAAaJ,EAAQI,YACrBC,cAAeL,EAAQK,mB,OCEvBC,EAAqB,SAACC,EAAaC,GACvC,IAAMC,EAAmBD,EAAOE,cAKhC,OAAOH,EAAYC,QAAO,SAACR,GAAD,OACxBA,EAAQI,YAAYM,cAAcC,SAASF,OAazCG,EAAqB,CACzBf,iBAOagB,eAjBS,SAACC,GAAD,MAAY,CAClCC,SAAUT,EAAmBQ,EAAMC,SAASC,MAAOF,EAAMC,SAASP,WAgB5BI,EAAzBC,EA7CK,SAAC,GAAiC,IAA/BE,EAA8B,EAA9BA,SAAUlB,EAAoB,EAApBA,cAC/B,OACE,oBAAIoB,UAAWC,IAAOC,GAAtB,SACGJ,GACCA,EAASK,KAAI,SAACC,GAAD,OACX,qBAAIJ,UAAWC,IAAOI,GAAtB,UACE,+BAAOD,EAAKjB,cACZ,+BAAOiB,EAAKhB,gBACZ,wBAAQkB,KAAK,SAASC,QAAS,kBAAM3B,EAAcwB,EAAKnB,KAAxD,sBAH6BmB,EAAKnB,Y,iBCexCU,EAAqB,CACzBa,SAAU,SAACC,GAAD,OAAO/B,EAAa+B,EAAEC,OAAOC,SAO1Bf,eAZS,SAACC,GAAD,MAAY,CAClCc,MAAOd,EAAMC,SAASP,UAWgBI,EAAzBC,EA5BA,SAAC,GAAyB,IAAvBe,EAAsB,EAAtBA,MAAOH,EAAe,EAAfA,SACvB,OACE,wBAAOR,UAAWC,IAAOW,MAAzB,mBAEE,uBACEJ,SAAUA,EACVG,MAAOA,EACPL,KAAK,OACLO,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,U,wCCVVC,EAAe,CACnB7B,YAAa,GACbC,cAAe,IAmFXO,EAAqB,CACzBb,iBAQac,eAbS,SAACC,GAAD,MAAY,CAClCoB,SAAUpB,EAAMC,SAASC,SAYaJ,EAAzBC,EAzFF,SAAC,GAAiC,IAA/Bd,EAA8B,EAA9BA,cAAemC,EAAe,EAAfA,SAC7B,EAA8BC,mBAASF,GAAvC,mBAAOjC,EAAP,KAAgBoC,EAAhB,KAeMC,EAAiB,SAACX,GACtB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,MAAOU,EAAf,EAAeA,KAEfF,GAAW,SAACG,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBD,EAAOV,QAqB3C,OACE,mCACE,uBAAMX,UAAWC,IAAOsB,UAAWC,SAhBlB,SAACf,GAGpB,GAFAA,EAAEgB,iBAxBoBtC,EA0BHJ,EAAQI,YA1BQC,EA0BKL,EAAQK,cAxB9C6B,EAASS,MACP,SAAC3C,GAAD,OACEA,EAAQI,YAAYM,gBAAkBN,EAAYM,kBAEtDwB,EAASS,MACP,SAAC3C,GAAD,OACEA,EAAQK,cAAcK,gBAAkBL,EAAcK,iBAmB1D,OAAOkC,MAAM,GAAD,OACP5C,EAAQI,YADD,eACmBJ,EAAQK,cAD3B,wCA3BO,IAACD,EAAaC,EAgCnCN,EAAcC,GAZdoC,EAAWH,IAmBT,UACE,yCAEE,uBACEL,MAAO5B,EAAQI,YACfqB,SAAUY,EACVd,KAAK,OACLe,KAAK,cACLR,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,4CAEE,uBACEJ,MAAO5B,EAAQK,cACfoB,SAAUY,EACVd,KAAK,MACLe,KAAK,gBACLR,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAIZ,wBAAQf,UAAWC,IAAO2B,QAAStB,KAAK,SAAxC,iCChDFX,EAAqB,CACzBb,gBACAD,kBAaae,eAXS,SAACC,GACvB,MAAO,CACLC,SAAUD,EAAMC,SAASC,SASWJ,EAAzBC,EAlCE,SAAC,GAAkC,IAAhCE,EAA+B,EAA/BA,SAAUjB,EAAqB,EAArBA,eAU5B,OATAgD,qBAAU,WACR,IAAMC,ECLU,SAACC,GACnB,IACE,IAAMC,EAAgBC,aAAaC,QAAQH,GAC3C,OAAyB,OAAlBC,OAAyBG,EAAYC,KAAKC,MAAML,GACvD,MAAOM,GACPC,QAAQC,IAAI,oBAAqBF,EAAMG,UDAnBC,CAAK,YACzB7D,EAAeiD,KACd,CAACjD,IAEJgD,qBAAU,YClBQ,SAACE,EAAKpB,GACxB,IACE,IAAMqB,EAAgBI,KAAKO,UAAUhC,GACrCsB,aAAaW,QAAQb,EAAKC,GAC1B,MAAOM,GACPC,QAAQC,IAAI,oBAAqBF,EAAMG,UDcvCI,CAAK,WAAY/C,KAChB,CAACA,IAGF,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UEnBSgD,EAJH,WACV,OAAO,cAAC,EAAD,K,eCOH/C,EAAQgD,YACZ,CACE,CAAE9D,GAAI,OAAQE,YAAa,gBAAiBC,cAAe,WAC3D,CAAEH,GAAI,OAAQE,YAAa,iBAAkBC,cAAe,WAC5D,CAAEH,GAAI,OAAQE,YAAa,gBAAiBC,cAAe,WAC3D,CAAEH,GAAI,OAAQE,YAAa,iBAAkBC,cAAe,aALrC,mBAQtBd,GAAkB,SAACuB,EAAOmD,GAAR,4BAAuBnD,GAAvB,CAA8BmD,EAAOhE,aARjC,cAStBT,GAAmB,SAACsB,EAAOmD,GAAR,OAAmBA,EAAOhE,WATvB,cAUtBR,GAAiB,SAACqB,EAAOmD,GAAR,OAChBnD,EAAMN,QAAO,SAACR,GAAD,OAAaA,EAAQE,KAAO+D,EAAOhE,cAX3B,cAYtBT,GAAmB,SAACsB,EAAOmD,GAAR,OAAmBA,EAAOhE,WAZvB,IAgBrBO,EAASwD,YAAc,GAAD,eACzBtE,GAAgB,SAACoB,EAAOmD,GAAR,OAAmBA,EAAOhE,YAoC9BiE,cAAgB,CAC7BlD,QACAR,WCjDa2D,EAVDC,YAAe,CAC3BC,QAAS,CAAEtD,SAAUuD,GACrBC,UAAUC,ICFZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,W","file":"static/js/main.270d4e4d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactsList_li__IA_a8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1n3wB\",\"formLabel\":\"Form_formLabel__3iYam\",\"formInput\":\"Form_formInput__1MOtU\",\"formBtn\":\"Form_formBtn__1ptU4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__39eBw\"};","const ADD_NEW_CONTACT = \"contacts/addNewContact\";\r\nconst GET_ALL_CONTACTS = \"contacts/getContacts\";\r\nconst DELETE_CONTACT = \"contacts/deleteContact\";\r\nconst CHANGE_FILTER = \"contacts/changeFilter\";\r\n\r\nexport { ADD_NEW_CONTACT, GET_ALL_CONTACTS, DELETE_CONTACT, CHANGE_FILTER };\r\n","// import { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport {\r\n  ADD_NEW_CONTACT,\r\n  GET_ALL_CONTACTS,\r\n  DELETE_CONTACT,\r\n  CHANGE_FILTER,\r\n} from \"../contacts/contacts-types\";\r\n\r\nimport { createAction, nanoid } from \"@reduxjs/toolkit\";\r\n\r\n//=======================toolkit========================\r\n\r\nexport const changeFilter = createAction(CHANGE_FILTER);\r\nexport const deleteContact = createAction(DELETE_CONTACT);\r\nexport const getAllContacts = createAction(GET_ALL_CONTACTS);\r\nexport const addNewContact = createAction(ADD_NEW_CONTACT, (contact) => {\r\n  return {\r\n    payload: {\r\n      id: nanoid(),\r\n      contactName: contact.contactName,\r\n      contactNumber: contact.contactNumber,\r\n    },\r\n  };\r\n});\r\n\r\n//=======================redux===========================\r\n// export const addNewContact = (contact) => {\r\n//   return {\r\n//     type: ADD_NEW_CONTACT,\r\n//     payload: {\r\n//       id: uuidv4(),\r\n//       contactName: contact.contactName,\r\n//       contactNumber: contact.contactNumber,\r\n//     },\r\n//   };\r\n// };\r\n\r\n// export const getAllContacts = (contacts) => {\r\n//   return {\r\n//     type: GET_ALL_CONTACTS,\r\n//     payload: contacts,\r\n//   };\r\n// };\r\n\r\n// export const deleteContact = (id) => {\r\n//   return {\r\n//     type: DELETE_CONTACT,\r\n//     payload: id,\r\n//   };\r\n// };\r\n\r\n// export const changeFilter = (value) => ({\r\n//   type: CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../contactsList/ContactsList.module.css\";\r\nimport { deleteContact } from \"../redux/contacts/contacts-actions\";\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul className={styles.ul}>\r\n      {contacts &&\r\n        contacts.map((item) => (\r\n          <li className={styles.li} key={item.id}>\r\n            <span>{item.contactName}</span>\r\n            <span>{item.contactNumber}</span>\r\n            <button type=\"button\" onClick={() => deleteContact(item.id)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  //   return allContacts.filter((contact) =>\r\n  //     console.log(contact.contactName.toLowerCase().includes(\"roise\"))\r\n  //   );\r\n\r\n  return allContacts.filter((contact) =>\r\n    contact.contactName.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getVisibleContacts(state.contacts.items, state.contacts.filter),\r\n});\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     contacts: state.contacts,\r\n//   };\r\n// };\r\nconst mapDispatchToProps = {\r\n  deleteContact,\r\n};\r\n\r\nContactList.propTypes = {\r\n  allContacts: PropTypes.string,\r\n  filter: PropTypes.string,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { changeFilter } from \"../redux/contacts/contacts-actions\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Search\r\n      <input\r\n        onChange={onChange}\r\n        value={value}\r\n        type=\"text\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChange: (e) => changeFilter(e.target.value),\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addNewContact } from \"../redux/contacts/contacts-actions\";\r\nimport styles from \"./Form.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst initialState = {\r\n  contactName: \"\",\r\n  contactNumber: \"\",\r\n};\r\n\r\nconst Form = ({ addNewContact, contatcs }) => {\r\n  const [contact, setContact] = useState(initialState);\r\n\r\n  const isThereContact = (contactName, contactNumber) => {\r\n    return (\r\n      contatcs.some(\r\n        (contact) =>\r\n          contact.contactName.toLowerCase() === contactName.toLowerCase()\r\n      ) ||\r\n      contatcs.some(\r\n        (contact) =>\r\n          contact.contactNumber.toLowerCase() === contactNumber.toLowerCase()\r\n      )\r\n    );\r\n  };\r\n\r\n  const onHandleChange = (e) => {\r\n    const { value, name } = e.target;\r\n\r\n    setContact((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const reset = () => {\r\n    setContact(initialState);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isThereContact(contact.contactName, contact.contactNumber)) {\r\n      return alert(\r\n        `${contact.contactName} or ${contact.contactNumber} has been already in contact list  `\r\n      );\r\n    }\r\n\r\n    addNewContact(contact);\r\n\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={styles.container} onSubmit={handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            value={contact.contactName}\r\n            onChange={onHandleChange}\r\n            type=\"text\"\r\n            name=\"contactName\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Telefon\r\n          <input\r\n            value={contact.contactNumber}\r\n            onChange={onHandleChange}\r\n            type=\"tel\"\r\n            name=\"contactNumber\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button className={styles.formBtn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contatcs: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addNewContact,\r\n};\r\n\r\nForm.propTypes = {\r\n  contatcs: PropTypes.array,\r\n  addNewContact: PropTypes.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { load, save } from \"../../services/localStorage\";\r\nimport ContactList from \"../contactsList/ContacsList\";\r\nimport Filter from \"../filter/Filter\";\r\nimport Form from \"../form/Form\";\r\nimport {\r\n  addNewContact,\r\n  getAllContacts,\r\n} from \"../redux/contacts/contacts-actions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Contacts = ({ contacts, getAllContacts }) => {\r\n  useEffect(() => {\r\n    const newContacts = load(\"contacts\");\r\n    getAllContacts(newContacts);\r\n  }, [getAllContacts]);\r\n\r\n  useEffect(() => {\r\n    save(\"contacts\", contacts);\r\n  }, [contacts]);\r\n\r\n  return (\r\n    <>\r\n      <Form />\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addNewContact,\r\n  getAllContacts,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n  };\r\n};\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array,\r\n  getAllContacts: PropTypes.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","export const save = (key, value) => {\r\n  try {\r\n    const reformedState = JSON.stringify(value);\r\n    localStorage.setItem(key, reformedState);\r\n  } catch (error) {\r\n    console.log(\"Set state error: \", error.message);\r\n  }\r\n};\r\n\r\nexport const load = (key) => {\r\n  try {\r\n    const reformedState = localStorage.getItem(key);\r\n    return reformedState === null ? undefined : JSON.parse(reformedState);\r\n  } catch (error) {\r\n    console.log(\"Get state error: \", error.message);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport Contacts from \"./Components/contacts/Contacts\";\r\n\r\nconst App = () => {\r\n  return <Contacts />;\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  ADD_NEW_CONTACT,\r\n  GET_ALL_CONTACTS,\r\n  DELETE_CONTACT,\r\n  CHANGE_FILTER,\r\n} from \"../contacts/contacts-types\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\n//==============================toolkit============================\r\n\r\nconst items = createReducer(\r\n  [\r\n    { id: \"id-1\", contactName: \"Rosie Simpson\", contactNumber: \"4591256\" },\r\n    { id: \"id-2\", contactName: \"Hermione Kline\", contactNumber: \"4438912\" },\r\n    { id: \"id-3\", contactName: \"Eden Clements\", contactNumber: \"6451779\" },\r\n    { id: \"id-4\", contactName: \"Annie Copeland\", contactNumber: \"2279126\" },\r\n  ],\r\n  {\r\n    [ADD_NEW_CONTACT]: (state, action) => [...state, action.payload],\r\n    [GET_ALL_CONTACTS]: (state, action) => action.payload,\r\n    [DELETE_CONTACT]: (state, action) =>\r\n      state.filter((contact) => contact.id !== action.payload),\r\n    [GET_ALL_CONTACTS]: (state, action) => action.payload,\r\n  }\r\n);\r\n\r\nconst filter = createReducer(\"\", {\r\n  [CHANGE_FILTER]: (state, action) => action.payload,\r\n});\r\n//===========================redux======================================\r\n// const items = (\r\n//   state = [\r\n//     { id: \"id-1\", contactName: \"Rosie Simpson\", contactNumber: \"4591256\" },\r\n//     { id: \"id-2\", contactName: \"Hermione Kline\", contactNumber: \"4438912\" },\r\n//     { id: \"id-3\", contactName: \"Eden Clements\", contactNumber: \"6451779\" },\r\n//     { id: \"id-4\", contactName: \"Annie Copeland\", contactNumber: \"2279126\" },\r\n//   ],\r\n\r\n//   action\r\n// ) => {\r\n//   switch (action.type) {\r\n//     case \"contacts/addNewContact\":\r\n//       return [...state, action.payload];\r\n//     case \"contacts/getContacts\":\r\n//       return action.payload;\r\n//     case \"contacts/deleteContact\":\r\n//       return state.filter((contact) => contact.id !== action.payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = \"\", action) => {\r\n//   switch (action.type) {\r\n//     case \"contacts/changeFilter\":\r\n//       return action.payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","// import { combineReducers } from \"redux\";===REDUX\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";===REDUX\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\n//======================toolkit=======================\r\nconst store = configureStore({\r\n  reducer: { contacts: contactsReducer },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n//========================redux==========================\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Components/redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}